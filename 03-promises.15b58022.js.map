{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAUC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAS,CAAEH,WAAUC,UAErBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAnCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,GAASF,EAAMG,OAAOd,MAAMe,MAC5BC,GAAQL,EAAMG,OAAOE,KAAKD,MAC1BE,GAAUN,EAAMG,OAAOG,OAAOF,MAElC,GAAI,CAACF,EAAOG,EAAMC,GAAQC,MAAK,SAAAH,G,OAASA,EAAQ,C,IAE9C,YADAnB,EAAAuB,OAAOC,QAAQ,kCAGjB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChCvB,EAAcuB,EAAGR,GACdS,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBJ,EAAAuB,OAAOK,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAH,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBJ,EAAAuB,OAAOC,QAAQ,sBAAuCK,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEhEa,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormsubmit);\n\nfunction onFormsubmit(event) {\n  event.preventDefault();\n\n  let delay = +event.target.delay.value;\n  let step = +event.target.step.value;\n  let amount = +event.target.amount.value;\n\n  if ([delay, step, amount].find(value => value < 0)) {\n    Notify.failure('Please, enter correct data > 0');\n    return;\n  }\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((response, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        response({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","response","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","target","value","step","amount","find","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.15b58022.js.map"}